diff -rNu /dev/null ./feeds/packages/multimedia/gmediarender/files/gmediarender.config
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ./feeds/packages/multimedia/gmediarender/files/gmediarender.config	2017-12-10 19:11:53.906652749 +0000
@@ -0,0 +1,7 @@
+config gmediarender 'core'
+	option enabled '1'
+	option name 'CofleryRender'
+	option mixer 'Speaker'
+	option mixervolume '80%'
+	option rendervolume '-10'
+	option alsadevice 'sysdefault'
diff -rNu /dev/null ./feeds/packages/multimedia/gmediarender/files/gmediarender.hotplug
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ./feeds/packages/multimedia/gmediarender/files/gmediarender.hotplug	2017-12-10 19:11:53.906652749 +0000
@@ -0,0 +1,15 @@
+case "$ACTION" in
+	add)
+		if [ -c "/dev/audio" ] &&
+			!(pgrep -f gmediarender >/dev/null 2>&1) &&
+			[ -x "/usr/bin/gmediarender" ]; then
+			/etc/init.d/gmediarender start
+		fi
+		;;
+	remove)
+		if [ ! -c "/dev/audio" ] &&
+			(pgrep -f gmediarender >/dev/null 2>&1); then
+			/etc/init.d/gmediarender stop
+		fi
+		;;
+esac
diff -rNu /dev/null ./feeds/packages/multimedia/gmediarender/files/gmediarender.init
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ./feeds/packages/multimedia/gmediarender/files/gmediarender.init	2017-12-10 19:11:53.906652749 +0000
@@ -0,0 +1,44 @@
+#!/bin/sh /etc/rc.common
+
+START=90
+STOP=10
+
+USE_PROCD=1
+PROG=/usr/bin/gmediarender
+
+start_instance()
+{
+	config_get_bool enabled "$1" 'enabled' 0
+	[ $enabled -eq 0 ] && return
+
+	config_get name "$1" 'name' 'CofleryRender'
+	config_get mixer "$1" 'mixer'
+	config_get mixervolume "$1" 'mixervolume'
+	config_get rendervolume "$1" 'rendervolume' '-10'
+	config_get alsadevice "$1" 'alsadevice'
+	ip=`ubus call "network.interface.lan" status | grep address | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'`
+
+	[ -n "$mixer" -a -n "$mixervolume" -a -x "/usr/bin/amixer" ] &&
+		/usr/bin/amixer set "$mixer" "$mixervolume" >/dev/null 2>&1
+
+	if [ -n "$alsadevice" ]; then
+		sinkparam="--gstout-audiosink=alsasink"
+		deviceparam="--gstout-audiodevice=$alsadevice"
+	fi
+
+	procd_open_instance
+	procd_set_param command "$PROG" -f "$name" -I "$ip" --gstout-initial-volume-db=$rendervolume $sinkparam $deviceparam
+	procd_close_instance
+}
+
+start_service()
+{
+	config_load 'gmediarender'
+	config_foreach start_instance 'gmediarender'
+}
+
+service_triggers()
+{
+	procd_add_reload_trigger 'gmediarender'
+}
+
diff -rNu /dev/null ./feeds/packages/multimedia/gmediarender/Makefile
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ./feeds/packages/multimedia/gmediarender/Makefile	2017-12-10 20:21:36.696970102 +0000
@@ -0,0 +1,61 @@
+#
+# Copyright (C) 2017 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=gmediarender
+PKG_VERSION:=2017-11-28
+PKG_RELEASE=$(PKG_SOURCE_VERSION)
+
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=git@github.com:coflery/gmrender-resurrect.git
+PKG_SOURCE_SUBDIR:=$(PKG_NAME)-$(PKG_VERSION)
+PKG_SOURCE_VERSION:=60a4bbf13d4dc98a989bf875c929f4b1ced15f29
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION)-$(PKG_SOURCE_VERSION).tar.gz
+
+PKG_FIXUP:=autoreconf
+PKG_INSTALL=1
+PKG_REMOVE_FILES:=autogen.sh aclocal.m4
+
+include $(INCLUDE_DIR)/package.mk
+include $(INCLUDE_DIR)/nls.mk
+
+GMEDIARENDER_LIBS:= \
+        libgstreamer1 \
+        glib2 \
+        libupnp \
+
+define Package/gmediarender
+  SECTION:=multimedia
+  CATEGORY:=Multimedia
+  DEPENDS:=$(foreach lib,$(GMEDIARENDER_LIBS),+$(lib))
+  TITLE:=A Headless UPnP Renderer
+endef
+
+define Package/gmediarender/description
+  gmediarender implements the server component that provides UPnP
+  controllers a means to render media content (audio, video and images)
+  from a UPnP media server.
+endef
+
+CONFIGURE_ARGS+= \
+	--with-build-cc="$(HOSTCC)" \
+	--prefix="/usr"
+
+define Package/gmediarender/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/$(PKG_NAME) $(1)/usr/bin/
+	$(INSTALL_DIR) $(1)/etc/init.d
+	#$(CP) $(PKG_BUILD_DIR)/scripts/init.d/$(PKG_NAME)er $(1)/etc/init.d/$(PKG_NAME)
+	$(INSTALL_BIN) ./files/$(PKG_NAME).init $(1)/etc/init.d/$(PKG_NAME)
+	$(INSTALL_DIR) $(1)/etc/config
+	$(CP) ./files/$(PKG_NAME).config $(1)/etc/config/$(PKG_NAME)
+	$(INSTALL_DIR) $(1)/etc/hotplug.d/usb
+	$(INSTALL_DATA) ./files/$(PKG_NAME).hotplug $(1)/etc/hotplug.d/usb/10-$(PKG_NAME)
+endef
+
+$(eval $(call BuildPackage,gmediarender))
